;;
;; IDLWAVE catalog for library coyote
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Tue Oct 23 11:51:59 2012
;;
(setq idlwave-library-catalog-libname "coyote")
(setq idlwave-library-catalog-routines
 '(("ADDTOPATH" pro nil (lib "addtopath.pro" nil "coyote") "%s, theDirectory" (nil ("VERBOSE")))
   ("BlendImage" pro nil (lib "blendimage.pro" nil "coyote") "%s, foreGroundImage, backGroundImage" (nil ("_EXTRA") ("ALPHA")))
   ("BoxPlot_Prepare_Data" fun nil (lib "boxplot.pro" nil "coyote") "Result = %s(data, missing_data_value)" (nil))
   ("BoxPlot_Draw" pro nil (lib "boxplot.pro" nil "coyote") "%s, thisdata" (nil ("BOXCOLOR") ("COLOR") ("FILLBOXES") ("STATS") ("WIDTH") ("XLOCATION")))
   ("BoxPlot" pro nil (lib "boxplot.pro" nil "coyote") "%s, data" (nil ("_EXTRA") ("ADDCMD") ("AXES_COLOR") ("BACKGROUND_COLOR") ("BOXCOLOR") ("CHARSIZE") ("COLOR") ("FILLBOXES") ("LABELS") ("LAYOUT") ("MISSING_DATA_VALUE") ("OVERPLOT") ("ROTATE") ("STATS") ("WINDOW") ("XCHARSIZE") ("XTHICK")))
   ("CanConnect" fun nil (lib "canconnect.pro" nil "coyote") "Result = %s" (nil))
   ("COLOR24" fun nil (lib "color24.pro" nil "coyote") "Result = %s(color)" (nil))
   ("COLORBAR" pro nil (lib "colorbar.pro" nil "coyote") "%s" (nil ("_EXTRA") ("ANNOTATECOLOR") ("BOTTOM") ("CHARSIZE") ("COLOR") ("DIVISIONS") ("FONT") ("FORMAT") ("INVERTCOLORS") ("MAXRANGE") ("MINOR") ("MINRANGE") ("NCOLORS") ("NODISPLAY") ("POSITION") ("RANGE") ("REVERSE") ("RIGHT") ("TICKLEN") ("TICKNAMES") ("TITLE") ("TOP") ("VERTICAL") ("XLOG") ("YLOG")))
   ("CTLOAD" pro nil (lib "ctload.pro" nil "coyote") "%s, table" (nil ("BOTTOM") ("BREWER") ("CLIP") ("FILE") ("GET_NAMES") ("NCOLORS") ("REVERSE") ("RGB_TABLE") ("ROW") ("SILENT") ("WINDOW") ("WINID")))
   ("DCBar" pro nil (lib "dcbar.pro" nil "coyote") "%s, colors" (nil ("ADDCMD") ("BARCOLOR") ("BOTTOM") ("CHARSIZE") ("COLOR") ("FILE") ("FONT") ("LABELS") ("NCOLORS") ("POSITION") ("ROTATE") ("SPACING") ("TCHARSIZE") ("TITLE") ("VERTICAL") ("WINDOW")))
   ("Refresh" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("OriginalColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("XColors_Load_Colors" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("XColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BLUE") ("GREEN") ("NAMES") ("NCOLORS") ("RED") ("STARTINDEX")))
   ("SetProperty" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BLUE") ("GREEN") ("NAMES") ("NCOLORS") ("RED") ("STARTINDEX")))
   ("Color24" fun "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(theColor)" (nil))
   ("GetColor" fun "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(theColor, startIndex)" (nil ("AUTODETERMINE") ("INDEXNUMBER") ("TRUECOLOR")))
   ("GetColors" fun "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(startIndex)" (nil ("INDEXNUMBER") ("Structure") ("TRUECOLOR")))
   ("LoadColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s, startindex" (nil))
   ("Button_Respond" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("Set_Slider_Color" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("Set_Standard_Color" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("DrawColors__Events" pro nil (lib "drawcolors__define.pro" nil "coyote") "%s, event" (nil))
   ("Select" fun "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("Cancel") ("Color") ("Group_Leader") ("Name") ("StartIndex") ("Title") ("TrueColor")))
   ("CLEANUP" pro "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("INIT" fun "DrawColors" (lib "drawcolors__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(red, green, blue, names)" (nil))
   ("DrawColors__Define" pro nil (lib "drawcolors__define.pro" nil "coyote") "%s" (nil))
   ("DrawCounties_DrawEntity" pro nil (lib "drawcounties.pro" nil "coyote") "%s, entity" (nil ("COLOR") ("LINESTYLE") ("THICK")))
   ("DrawCounties" pro nil (lib "drawcounties.pro" nil "coyote") "%s, countyFile" (nil ("ATTRIBUTE_NAME") ("COLORS") ("LINESTYLE") ("STATENAMES") ("THICK")))
   ("DrawStates_DrawEntity" pro nil (lib "drawstates.pro" nil "coyote") "%s, entity" (nil ("COLOR") ("FILL") ("LINESTYLE") ("THICK")))
   ("DrawStates" pro nil (lib "drawstates.pro" nil "coyote") "%s, stateFile" (nil ("ATTRIBUTE_NAME") ("COLORS") ("FILL") ("LINESTYLE") ("MINNUMVERTS") ("STATENAMES") ("THICK")))
   ("FindMapBoundary" fun nil (lib "findmapboundary.pro" nil "coyote") "Result = %s(filename, boundary)" (nil ("USE_LATLON") ("UTM_SOUTH") ("XRANGE") ("YRANGE")))
   ("FIXPS" pro nil (lib "fixps.pro" nil "coyote") "%s, in_filename, out_filename" (nil ("A4") ("LEDGER") ("LEGAL") ("LETTER") ("PAGETYPE") ("QUIET") ("SUCCESS")))
   ("FSC_Arrow" pro nil (lib "fsc_arrow.pro" nil "coyote") "%s, x0, y0, x1, y1" (nil ("_EXTRA") ("COLOR") ("DATA") ("HSIZE") ("HTHICK") ("LINESTYLE") ("NORMAL") ("SOLID") ("THICK") ("WINDOW")))
   ("FSC_Axis" pro nil (lib "fsc_axis.pro" nil "coyote") "%s, xloc, yloc, zloc" (nil ("_REF_EXTRA") ("CHARSIZE") ("COLOR") ("DATA") ("DEVICE") ("FONT") ("NORMAL") ("SAVE") ("TITLE") ("WINDOW") ("XAXIS") ("XLOG") ("XTITLE") ("YAXIS") ("YLOG") ("YNOZERO") ("YTITLE") ("ZAXIS") ("ZLOG") ("ZTITLE")))
   ("FSC_Base_Filename" fun nil (lib "fsc_base_filename.pro" nil "coyote") "Result = %s(filename)" (nil ("Directory") ("Extension") ("Path_Separator")))
   ("FSC_Color_Count_Rows" fun nil (lib "fsc_color.pro" nil "coyote") "Result = %s(filename)" (nil ("MaxRows")))
   ("FSC_Color_Color24" fun nil (lib "fsc_color.pro" nil "coyote") "Result = %s(color)" (nil))
   ("FSC_Color" fun nil (lib "fsc_color.pro" nil "coyote") "Result = %s(theColour, colorIndex)" (nil ("_Extra") ("AllColors") ("Brewer") ("Cancel") ("Check_Connection") ("ColorStructure") ("Decomposed") ("Filename") ("Names") ("NColors") ("NODISPLAY") ("Row") ("SelectColor") ("Triple")))
   ("FSC_COLORBAR" pro nil (lib "fsc_colorbar.pro" nil "coyote") "%s" (nil ("_EXTRA") ("ADDCMD") ("ANNOTATECOLOR") ("BOTTOM") ("CHARSIZE") ("CLAMP") ("COLOR") ("DIVISIONS") ("FONT") ("FORMAT") ("INVERTCOLORS") ("MAXRANGE") ("MINOR") ("MINRANGE") ("NCOLORS") ("NEUTRALINDEX") ("NODISPLAY") ("PALETTE") ("POSITION") ("RANGE") ("REVERSE") ("RIGHT") ("TICKLEN") ("TICKNAMES") ("TITLE") ("TOP") ("VERTICAL") ("WINDOW") ("XLOG") ("YLOG")))
   ("FSC_ColorFill" pro nil (lib "fsc_colorfill.pro" nil "coyote") "%s, x, y, z" (nil ("_EXTRA") ("COLOR") ("DEVICE") ("NORMAL") ("WINDOW")))
   ("FSC_Contour" pro nil (lib "fsc_contour.pro" nil "coyote") "%s, data, x, y" (nil ("_REF_EXTRA") ("ADDCMD") ("AXESCOLOR") ("AXISCOLOR") ("BACKGROUND") ("C_COLORS") ("C_LABELS") ("CELL_FILL") ("CHARSIZE") ("COLOR") ("FILL") ("FONT") ("IRREGULAR") ("LABEL") ("LAYOUT") ("LEVELS") ("MISSINGVALUE") ("NLEVELS") ("NOERASE") ("OVERPLOT") ("POSITION") ("RESOLUTION") ("TRADITIONAL") ("WINDOW") ("XSTYLE") ("XTHICK") ("YSTYLE") ("YTHICK")))
   ("FSC_DefCharSize" fun nil (lib "fsc_defcharsize.pro" nil "coyote") "Result = %s" (nil ("FONT")))
   ("FSC_Display" pro nil (lib "fsc_display.pro" nil "coyote") "%s, pxsize, pysize" (nil ("_EXTRA") ("COLOR") ("FREE") ("WID") ("XSIZE") ("YSIZE")))
   ("FSC_Erase" pro nil (lib "fsc_erase.pro" nil "coyote") "%s, background_color" (nil ("COLOR") ("LAYOUT") ("WINDOW")))
   ("FSC_Pickfile" fun nil (lib "fsc_pickfile.pro" nil "coyote") "Result = %s" (nil ("_REF_EXTRA") ("DATA") ("DEMO") ("HDF") ("JPEG") ("LAST_FILE") ("LIDAR") ("NCDF") ("PNG") ("TIFF")))
   ("FSC_Plot" pro nil (lib "fsc_plot.pro" nil "coyote") "%s, x, y" (nil ("_REF_EXTRA") ("ADDCMD") ("ASPECT") ("AXESCOLOR") ("AXISCOLOR") ("BACKGROUND") ("CHARSIZE") ("COLOR") ("FONT") ("ISOTROPIC") ("LAYOUT") ("NODATA") ("NOERASE") ("OVERPLOT") ("POSITION") ("PSYM") ("SYMCOLOR") ("SYMSIZE") ("TRADITIONAL") ("WINDOW")))
   ("FSC_PlotS" pro nil (lib "fsc_plots.pro" nil "coyote") "%s, x, y, z" (nil ("_EXTRA") ("ADDCMD") ("COLOR") ("PSYM") ("SYMCOLOR") ("SYMSIZE") ("WINDOW")))
   ("FSC_QueryWin" fun nil (lib "fsc_querywin.pro" nil "coyote") "Result = %s" (nil ("COUNT") ("CURRENT") ("OBJECTREF") ("TITLE") ("WIDGETID")))
   ("FSC_Resize_Image" fun nil (lib "fsc_resize_image.pro" nil "coyote") "Result = %s(image, cols, rows)" (nil ("INTERPOLATE") ("MINUS_ONE")))
   ("FSC_Surf" pro nil (lib "fsc_surf.pro" nil "coyote") "%s, data, x, y" (nil ("_Extra") ("ADDCMD") ("AXESCOLOR") ("AXISCOLOR") ("BACKGROUND") ("BOTTOM") ("CHARSIZE") ("COLOR") ("ELEVATION_SHADING") ("FONT") ("LAYOUT") ("NOERASE") ("PALETTE") ("ROTX") ("ROTZ") ("SHADED") ("SHADES") ("SKIRT") ("TITLE") ("TRADITIONAL") ("TSIZE") ("TSPACE") ("WINDOW") ("XSTYLE") ("YSTYLE") ("ZSTYLE")))
   ("CW_Light_Control_Intensity_Events" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("CW_Light_Control_Events" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("CW_Light_Control" fun nil (lib "fsc_surface.pro" nil "coyote") "Result = %s(parent, theLight)" (nil ("Color") ("Event_Pro") ("Index") ("LabelSize") ("Name") ("SETCOLOR_NAME") ("UValue")))
   ("FSC_Surface_Light_Done" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Light_Controls_Event" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Light_Controls" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Axes_OnOff" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Bottom_OnOff" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Change_Colors" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Draw_Events" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Elevation_Colors" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Elevation_Shading" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Exit" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Move_Surface" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Move_Title" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Output" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Properties" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Resize" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Skirt_OnOff" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Style" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, event" (nil))
   ("FSC_Surface_Cleanup" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, tlb" (nil))
   ("FSC_Surface_Aspect" fun nil (lib "fsc_surface.pro" nil "coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("FSC_Surface" pro nil (lib "fsc_surface.pro" nil "coyote") "%s, data, x, y" (nil ("_Extra") ("Axiscolor") ("Background") ("Block") ("Bottom") ("Brewer") ("Charsize") ("Color") ("Constrain_Aspect") ("CTable") ("Elevation_Shading") ("Font") ("Group_Leader") ("Hidden_Lines") ("Reverse") ("Shaded") ("Skirt") ("Style") ("TCharsize") ("TColor") ("Texture_Image") ("Title") ("XOffset") ("XRange") ("XSize") ("XStyle") ("XTitle") ("YOffset") ("YRange") ("YSize") ("YStyle") ("YTitle") ("ZRange") ("ZScale") ("ZStyle") ("ZTitle")))
   ("FSC_Text" pro nil (lib "fsc_text.pro" nil "coyote") "%s, xloc, yloc, text" (nil ("_REF_EXTRA") ("ALIGNMENT") ("CHARSIZE") ("COLOR") ("DATA") ("DEVICE") ("FONT") ("NORMAL") ("OUTLOC") ("PLACE") ("TT_FONT") ("WIDTH") ("WINDOW")))
   ("AddCommand" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, command" (nil ("INDEX")))
   ("CreatePostScriptFile" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("DeleteCommand" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, cmdIndex" (nil ("ALL")))
   ("FSC_CmdWindow_Dispatch_Events" pro nil (lib "fsc_window.pro" nil "coyote") "%s, event" (nil))
   ("ExecuteCommands" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BACKGROUND") ("COLORPALETTE") ("COMMANDS") ("DELAY") ("ERASEIT") ("IM_DENSITY") ("IM_OPTIONS") ("IM_RESIZE") ("IM_TRANSPARENT") ("MULTI") ("PS_CHARSIZE") ("PS_DELETE") ("PS_ENCAPSULATED") ("PS_FONT") ("PS_METRIC") ("PS_SCALE_FACTOR") ("PS_TT_FONT") ("TLB") ("WID") ("XOMARGIN") ("YOMARGIN")))
   ("ListCommand" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, cmdIndex" (nil))
   ("LoadColors" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, r, g, b" (nil ("XCOLORS_DATA")))
   ("ReplaceCommand" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, command, cmdIndex" (nil ("MULTI")))
   ("Resize" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("SaveAsRaster" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, event" (nil))
   ("SetProperty" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BACKGROUND") ("DELAY") ("ERASEIT") ("IM_DENSITY") ("IM_OPTIONS") ("IM_RESIZE") ("IM_TRANSPARENT") ("MULTI") ("PALETTE") ("PS_CHARSIZE") ("PS_DELETE") ("PS_ENCAPSULATED") ("PS_FONT") ("PS_METRIC") ("PS_SCALE_FACTOR") ("PS_TT_FONT") ("UPDATE") ("XOMARGIN") ("YOMARGIN")))
   ("FSC_CmdWindow_Cleanup" pro nil (lib "fsc_window.pro" nil "coyote") "%s, tlb" (nil))
   ("Init" fun "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Result = Obj ->[%s::]%s(command, p1, p2, p3)" (nil ("_Extra") ("AddCmd") ("CmdDelay") ("Group_Leader") ("Method") ("ReplaceCmd") ("WBackground") ("WEraseIt") ("WMulti") ("WOXMargin") ("WOYMargin") ("WTitle") ("WXPos") ("WXSize") ("WYPos") ("WYSize")))
   ("Cleanup" pro "FSC_CmdWindow" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("FSC_CmdWindow__Define" pro nil (lib "fsc_window.pro" nil "coyote") "%s, class" (nil))
   ("Draw" pro "FSC_Window_Command" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("SUCCESS")))
   ("List" pro "FSC_Window_Command" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s, prefix" (nil))
   ("Cleanup" pro "FSC_Window_Command" (lib "fsc_window.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("INIT" fun "FSC_Window_Command" (lib "fsc_window.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("COMMAND") ("KEYWORDS") ("P1") ("P2") ("P3") ("TYPE")))
   ("FSC_Window_Command__Define" pro nil (lib "fsc_window.pro" nil "coyote") "%s" (nil))
   ("FSC_Window_ID__Define" pro nil (lib "fsc_window.pro" nil "coyote") "%s" (nil))
   ("FSC_Window" pro nil (lib "fsc_window.pro" nil "coyote") "%s, command, p1, p2, p3" (nil ("_Extra") ("AddCmd") ("CmdDelay") ("CmdIndex") ("DeleteCmd") ("ExecuteCmd") ("Group_Leader") ("ListCmd") ("LoadCmd") ("Method") ("ReplaceCmd") ("WBackground") ("WErase") ("WinID") ("WMulti") ("WObject") ("WOXMargin") ("WOYMargin") ("WTitle") ("WXPos") ("WXSize") ("WYPos") ("WYSize")))
   ("FSC_Window_Get_Defaults" pro nil (lib "fsc_window_get_defaults.pro" nil "coyote") "%s" (nil ("Background") ("Delay") ("EraseIt") ("IM_Density") ("IM_Options") ("IM_Resize") ("IM_Transparent") ("Multi") ("Palette") ("PS_CHARSIZE") ("PS_Delete") ("PS_Encapsulated") ("PS_FONT") ("PS_Metric") ("PS_SCALE_FACTOR") ("PS_TT_FONT") ("Title") ("XOMargin") ("XPos") ("XSize") ("YOMargin") ("YPos") ("YSize")))
   ("FSC_Window_Set_Defaults" pro nil (lib "fsc_window_set_defaults.pro" nil "coyote") "%s" (nil ("Background") ("Delay") ("EraseIt") ("IM_Density") ("IM_Options") ("IM_Resize") ("IM_Transparent") ("Multi") ("Palette") ("PS_CHARSIZE") ("PS_Delete") ("PS_Encapsulated") ("PS_FONT") ("PS_Metric") ("PS_SCALE_FACTOR") ("PS_TT_FONT") ("Reset") ("Title") ("XOMargin") ("XPos") ("XSize") ("YOMargin") ("YPos") ("YSize")))
   ("FSC_WSet" pro nil (lib "fsc_wset.pro" nil "coyote") "%s, selection" (nil ("OBJECT") ("TITLE") ("WIDGETID")))
   ("FSC_ZImage_ZoomDied" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, zoomID" (nil))
   ("FSC_ZImage_BoxColor" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZImage_LoadColors" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZImage_Quit" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZImage_Cleanup" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, tlb" (nil))
   ("FSC_ZImage_Factor" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZImage_DrawEvents" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZImage" pro nil (lib "fsc_zimage.pro" nil "coyote") "%s, image" (nil ("BOTTOM") ("BOXCOLOR") ("GROUP_LEADER") ("MAXVALUE") ("MINVALUE") ("NCOLORS") ("NOINTERPOLATE") ("SCALE") ("TOP")))
   ("FSC_ZPlot_Cleanup" pro nil (lib "fsc_zplot.pro" nil "coyote") "%s, tlb" (nil))
   ("FSC_ZPlot_Resize" pro nil (lib "fsc_zplot.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZPlot_Events" pro nil (lib "fsc_zplot.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZPlot_Drawbox" pro nil (lib "fsc_zplot.pro" nil "coyote") "%s, event" (nil))
   ("FSC_ZPlot" pro nil (lib "fsc_zplot.pro" nil "coyote") "%s, x, y" (nil ("_Extra") ("ArrowColor") ("AxisColor") ("Background") ("Color") ("Group_Leader") ("SymColor") ("XLog") ("XSize") ("YLog") ("YSize")))
   ("HasImageMagick" fun nil (lib "hasimagemagick.pro" nil "coyote") "Result = %s" (nil ("VERSION")))
   ("HistoPlot" pro nil (lib "histoplot.pro" nil "coyote") "%s, dataToHistogram" (nil ("_REF_EXTRA") ("ADDCMD") ("AXISCOLORNAME") ("BACKCOLORNAME") ("BINSIZE") ("CHARSIZE") ("DATACOLORNAME") ("FILE") ("FILLPOLYGON") ("FREQUENCY") ("HISTDATA") ("L64") ("LAYOUT") ("LINE_FILL") ("LOCATIONS") ("MAX_VALUE") ("MAXINPUT") ("MIN_VALUE") ("MININPUT") ("MISSING") ("NAN") ("NBINS") ("NOERASE") ("OMAX") ("OMIN") ("OPLOT") ("OPROBABILITY") ("ORIENTATION") ("OUTLINE") ("PATTERN") ("POLYCOLOR") ("PROBABILITY_FUNCTION") ("PROBCOLORNAME") ("REVERSE_INDICES") ("SPACING") ("THICK") ("WINDOW")))
   ("smooth2" fun nil (lib "loaddata.pro" nil "coyote") "Result = %s(i, w)" (nil ("help")))
   ("makez" fun nil (lib "loaddata.pro" nil "coyote") "Result = %s(nx, ny, w)" (nil ("help") ("lastseed") ("periodic") ("seed")))
   ("makey" fun nil (lib "loaddata.pro" nil "coyote") "Result = %s(n, w)" (nil ("help") ("lastseed") ("periodic") ("seed")))
   ("LoadData_ReadData" fun nil (lib "loaddata.pro" nil "coyote") "Result = %s(number)" (nil))
   ("LoadData_CenterTLB" pro nil (lib "loaddata.pro" nil "coyote") "%s, tlb" (nil))
   ("LOADDATA_CANCEL" pro nil (lib "loaddata.pro" nil "coyote") "%s, event" (nil))
   ("LOADDATA_EVENT" pro nil (lib "loaddata.pro" nil "coyote") "%s, event" (nil))
   ("LOADDATA" fun nil (lib "loaddata.pro" nil "coyote") "Result = %s(number)" (nil ("CANCEL") ("Group_Leader") ("Images")))
   ("Make_Transparent_Image" fun nil (lib "make_transparent_image.pro" nil "coyote") "Result = %s(image)" (nil ("COLOR") ("FILENAME") ("SAVE_PNG") ("WSET")))
   ("Map_GSHHS_Shoreline" pro nil (lib "map_gshhs_shoreline.pro" nil "coyote") "%s, filename" (nil ("_EXTRA") ("COLOR") ("FILL") ("LAND_COLOR") ("LEVEL") ("MAP_PROJECTION") ("MINAREA") ("OUTLINE") ("WATER_COLOR")))
   ("MPI_Axis_Widget_Events" pro nil (lib "mpi_axis.pro" nil "coyote") "%s, Event" (nil))
   ("MPI_Axis" fun nil (lib "mpi_axis.pro" nil "coyote") "Result = %s" (nil ("_Extra") ("Group_Leader") ("Only_Style") ("Only_Tick") ("Short") ("XAxis") ("YAxis")))
   ("MPI_Axis_FindTLB" fun nil (lib "mpi_axis__define.pro" nil "coyote") "Result = %s(startID)" (nil))
   ("MPI_Axis_CenterTLB" pro nil (lib "mpi_axis__define.pro" nil "coyote") "%s, tlb" (nil))
   ("MPI_Axis_Error_Message" fun nil (lib "mpi_axis__define.pro" nil "coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("GetProperty" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("Name")))
   ("ResizeTLB" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetTLB" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil))
   ("GetKeywords" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil))
   ("UpdateObject" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("CheckEvent" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("LowRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("HighRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("ResetRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AxisTitle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AxisThickness" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MajorTicks" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickLength" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("CharSize" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MinorTicks" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickFormat" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("GridStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetExactStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetExtendStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetHideStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetBoxStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetZeroStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLogStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("DismissDialog" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AcceptTickOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("StyleOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MPI_Axis_Widget_Events" fun nil (lib "mpi_axis__define.pro" nil "coyote") "Result = %s(event)" (nil))
   ("GUI" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(parent)" (nil ("Defaultfont") ("Event_Func") ("Event_Pro") ("LabelFont") ("Only_Style") ("Only_Tick") ("Short_Form") ("UValue")))
   ("SetProperty" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("AutoKeywords") ("AutoRange") ("Charsize") ("Defaultfont") ("Exact") ("Extend") ("Gridstyle") ("Hide") ("LabelFont") ("Log") ("Margin") ("Minor") ("Name") ("NoBox") ("NoZero") ("Range") ("Style") ("Thick") ("Tickformat") ("Tickinterval") ("Ticklayout") ("Ticklen") ("Tickname") ("Ticks") ("Tickunits") ("Tickv") ("Title") ("XAxis") ("YAxis") ("ZAxis")))
   ("Init" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("AutoKeywords") ("AutoRange") ("Charsize") ("Exact") ("Extend") ("Gridstyle") ("Hide") ("Log") ("Margin") ("Minor") ("Name") ("NoBox") ("NoZero") ("Range") ("Style") ("Thick") ("Tickformat") ("Tickinterval") ("Ticklayout") ("Ticklen") ("Tickname") ("Ticks") ("Tickunits") ("Tickv") ("Title") ("XAxis") ("YAxis") ("ZAxis")))
   ("Cleanup" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("MPI_Axis_Notify_Realize" pro nil (lib "mpi_axis__define.pro" nil "coyote") "%s, tlb" (nil))
   ("MPI_Axis_GetValue" fun nil (lib "mpi_axis__define.pro" nil "coyote") "Result = %s(id)" (nil))
   ("MPI_Axis_SetValue" pro nil (lib "mpi_axis__define.pro" nil "coyote") "%s, value" (nil))
   ("MPI_Axis__Define" pro nil (lib "mpi_axis__define.pro" nil "coyote") "%s" (nil))
   ("MPI_Overplot__Define" pro nil (lib "mpi_plot.pro" nil "coyote") "%s" (nil))
   ("MPI_Plot_Clear_Overplots" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_DrawThePlot" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, infoptr" (nil ("Overplot")))
   ("MPI_Plot_PostScript" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_Print" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_SaveAs" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_Quit" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_Cleanup" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, tlb" (nil))
   ("MPI_Plot_Configure_Button" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_Resize" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot_Configuration_Events" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, event" (nil))
   ("MPI_Plot" pro nil (lib "mpi_plot.pro" nil "coyote") "%s, x, y" (nil ("_Extra") ("Color") ("DataColor") ("Overplot") ("PSym") ("Title") ("XLog") ("XTitle") ("YLog") ("YTitle")))
   ("MPI_PlotConfig_CenterTLB" pro nil (lib "mpi_plotconfig__define.pro" nil "coyote") "%s, tlb" (nil))
   ("MPI_PlotConfig_Error_Message" fun nil (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("Symbol" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(number)" (nil))
   ("AxisObjectEvents" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetPlotKeywords" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s, plotkeywords" (nil))
   ("Destroy" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetTLB" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil))
   ("SendEvent" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetKeywords" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil))
   ("UpdateObject" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("CheckEvent" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetPlotPosition" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetTitle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSubTitle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetFont" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLinestyle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSymbol" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetBackgroundColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetDataColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLineThick" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetCharThick" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSymSize" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetCharSize" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SymbolWithLine" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetTickLen" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("DismissDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AcceptDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("ApplyDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("GUI" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("All_events") ("Block") ("Defaultfont") ("Group_Leader") ("LabelDefaultSize") ("LabelFont") ("NotifyID") ("XLongForm") ("YLongForm")))
   ("SetProperty" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("Background") ("Charsize") ("Charthick") ("Color") ("Datacolor") ("Font") ("Linestyle") ("NoAxisInfo") ("Position") ("PSym") ("Subtitle") ("Symsize") ("Thick") ("Ticklen") ("Title") ("UseDataColor") ("XAxis") ("YAxis")))
   ("Init" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Background") ("Charsize") ("Charthick") ("Color") ("Datacolor") ("Font") ("Linestyle") ("NoAxisInfo") ("Position") ("PSym") ("Subtitle") ("Symsize") ("Thick") ("Ticklen") ("Title") ("UseDataColor") ("XAxis") ("YAxis")))
   ("MPI_PlotConfig_GetValue" fun nil (lib "mpi_plotconfig__define.pro" nil "coyote") "Result = %s(id)" (nil))
   ("MPI_PlotConfig_SetValue" pro nil (lib "mpi_plotconfig__define.pro" nil "coyote") "%s, value" (nil))
   ("MPI_PlotConfig_Widget_Events" pro nil (lib "mpi_plotconfig__define.pro" nil "coyote") "%s, event" (nil))
   ("Cleanup" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("MPI_PlotConfig__Define" pro nil (lib "mpi_plotconfig__define.pro" nil "coyote") "%s" (nil))
   ("MS_FileTime" fun nil (lib "ms_filetime.pro" nil "coyote") "Result = %s(fileTime)" (nil ("AS_STRING")))
   ("Object_Shade_Surf_Cleanup" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, tlb" (nil))
   ("Object_Shade_Surf_Draw_Events" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Resize" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Style" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Exit" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, event" (nil))
   ("Object_Shade_Surf" pro nil (lib "object_shade_surf.pro" nil "coyote") "%s, data, x, y" (nil ("Style")))
   ("OWindow_Cleanup" pro nil (lib "owindow.pro" nil "coyote") "%s, tlb" (nil))
   ("OWindow_Quit" pro nil (lib "owindow.pro" nil "coyote") "%s, event" (nil))
   ("OWindow_Event" pro nil (lib "owindow.pro" nil "coyote") "%s, event" (nil))
   ("OWindow" fun nil (lib "owindow.pro" nil "coyote") "Result = %s(thisView)" (nil ("Group_Leader") ("Title") ("XSize") ("YSize")))
   ("PickColorName_CenterTLB" pro nil (lib "pickcolorname.pro" nil "coyote") "%s, tlb" (nil))
   ("PickColorName_RGB_to_24Bit" fun nil (lib "pickcolorname.pro" nil "coyote") "Result = %s(number)" (nil))
   ("PickColorName_Count_Rows" fun nil (lib "pickcolorname.pro" nil "coyote") "Result = %s(filename)" (nil ("MaxRows")))
   ("PickColorName_Select_Color" pro nil (lib "pickcolorname.pro" nil "coyote") "%s, event" (nil))
   ("PickColorName_Buttons" pro nil (lib "pickcolorname.pro" nil "coyote") "%s, event" (nil))
   ("PickColorName" fun nil (lib "pickcolorname.pro" nil "coyote") "Result = %s(theName)" (nil ("Bottom") ("Brewer") ("Cancel") ("Columns") ("Filename") ("Group_Leader") ("Index") ("Title")))
   ("PROGRESSBAR_Cleanup" pro nil (lib "progressbar__define.pro" nil "coyote") "%s, tlb" (nil))
   ("PROGRESSBAR_Error_Message" fun nil (lib "progressbar__define.pro" nil "coyote") "Result = %s(theMessage)" (nil ("_Extra") ("Error") ("Informational") ("NoName") ("Title") ("Traceback")))
   ("PROGRESSBAR_Event" pro nil (lib "progressbar__define.pro" nil "coyote") "%s, event" (nil))
   ("CheckButton" fun "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("ACCEPT") ("CANCEL")))
   ("CheckCancel" fun "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil))
   ("Destroy" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BACKGROUND") ("COLOR") ("FAST_LOOP") ("PERCENT") ("TEXT") ("TLB_ID")))
   ("SetProperty" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("BACKGROUND") ("CANCEL") ("COLOR") ("FAST_LOOP") ("TEXT") ("TITLE") ("XOFFSET") ("YOFFSET")))
   ("Start" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s, initialPercent" (nil))
   ("Update" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s, percent" (nil ("Text") ("Title")))
   ("CLEANUP" pro "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("INIT" fun "PROGRESSBAR" (lib "progressbar__define.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("ACCEPT") ("BACKGROUND") ("COLOR") ("FAST_LOOP") ("GROUP_LEADER") ("NOCANCEL") ("PERCENT") ("START") ("TEXT") ("TITLE") ("XOFFSET") ("XSIZE") ("YOFFSET") ("YSIZE")))
   ("PROGRESSBAR__DEFINE" pro nil (lib "progressbar__define.pro" nil "coyote") "%s" (nil))
   ("ShapeInfo_Events" pro nil (lib "shapeinfo.pro" nil "coyote") "%s, event" (nil))
   ("ShapeInfo_Cleanup" pro nil (lib "shapeinfo.pro" nil "coyote") "%s, tlb" (nil))
   ("ShapeInfo" pro nil (lib "shapeinfo.pro" nil "coyote") "%s, filename" (nil ("XRANGE") ("YRANGE")))
   ("SymCat" fun nil (lib "symcat.pro" nil "coyote") "Result = %s(theSymbol)" (nil ("COLOR") ("THICK")))
   ("TVIMAGE_PREPARE_ALPHA" fun nil (lib "tvimage.pro" nil "coyote") "Result = %s(image, position, alphaBackgroundImage)" (nil ("ALPHABGPOSITION") ("NOINTERP") ("TV")))
   ("TVIMAGE" pro nil (lib "tvimage.pro" nil "coyote") "%s, image, x, y" (nil ("_EXTRA") ("ACOLOR") ("ADDCMD") ("ALPHABACKGROUNDIMAGE") ("ALPHABGPOSITION") ("AXES") ("AXIS") ("AXKEYWORDS") ("BACKGROUND") ("BOTTOM") ("BREWER") ("COLOR") ("ERASE") ("HALF_HALF") ("KEEP_ASPECT_RATIO") ("LAYOUT") ("MARGIN") ("MAXVALUE") ("MINUS_ONE") ("MINVALUE") ("MULTIMARGIN") ("NCOLORS") ("NOINTERPOLATION") ("NORMAL") ("OVERPLOT") ("PALETTE") ("POSITION") ("QUIET") ("SAVE") ("SCALE") ("TOP") ("TV") ("WHITE") ("WINDOW") ("XRANGE") ("XTITLE") ("YRANGE") ("YTITLE")))
   ("TVINFO" pro nil (lib "tvinfo.pro" nil "coyote") "%s, image, position" (nil))
   ("TVREAD" fun nil (lib "tvread.pro" nil "coyote") "Result = %s(xstart, ystart, ncols, nrows)" (nil ("_Extra") ("BMP") ("Cancel") ("Colors") ("Cube") ("Dither") ("Filename") ("GIF") ("JPEG") ("NoDialog") ("Order") ("Overwrite_Prompt") ("PICT") ("PNG") ("Quality") ("TIFF") ("True") ("TYPE") ("WID")))
   ("TVSCALE" pro nil (lib "tvscale.pro" nil "coyote") "%s, image, x, y" (nil ("_EXTRA") ("ACOLOR") ("ADDCMD") ("ALPHABACKGROUNDIMAGE") ("ALPHABGPOSITION") ("AXES") ("AXIS") ("AXKEYWORDS") ("BACKGROUND") ("BOTTOM") ("BREWER") ("COLOR") ("ERASE") ("HALF_HALF") ("KEEP_ASPECT_RATIO") ("LAYOUT") ("MARGIN") ("MAXVALUE") ("MINUS_ONE") ("MINVALUE") ("MULTIMARGIN") ("NCOLORS") ("NOINTERPOLATION") ("NORMAL") ("OVERPLOT") ("PALETTE") ("POSITION") ("QUIET") ("SAVE") ("TOP") ("TV") ("WHITE") ("WINDOW") ("XRANGE") ("XTITLE") ("YRANGE") ("YTITLE")))
   ("INIT" fun "VColorBar" (lib "xcontour.pro" nil "coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("NColors") ("Palette") ("Position") ("Range") ("Title")))
   ("Cleanup" pro "VColorBar" (lib "xcontour.pro" nil "coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "VColorBar" (lib "xcontour.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("_Ref_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("SetProperty" pro "VColorBar" (lib "xcontour.pro" nil "coyote") "Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Title") ("Transform")))
   ("VColorBar__Define" pro nil (lib "xcontour.pro" nil "coyote") "%s" (nil))
   ("XContour_Cleanup" pro nil (lib "xcontour.pro" nil "coyote") "%s, tlb" (nil))
   ("XContour_Draw_Events" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour_Properties" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour_Output" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour_Exit" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour_Printing" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour_Resize" pro nil (lib "xcontour.pro" nil "coyote") "%s, event" (nil))
   ("XContour" pro nil (lib "xcontour.pro" nil "coyote") "%s, data, x, y" (nil ("_Extra") ("CBarTitle") ("Group_Leader") ("NLevels") ("Title") ("XTitle") ("YTitle")))
   ("XImage_Aspect" fun nil (lib "ximage.pro" nil "coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("XImage_Zoom_Button_Event" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Processing" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Output" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Exit" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Printing" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Image_Colors" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XIMAGE_CLEANUP" pro nil (lib "ximage.pro" nil "coyote") "%s, id" (nil))
   ("XImage_DrawWidget_Event" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XImage_Resize" pro nil (lib "ximage.pro" nil "coyote") "%s, event" (nil))
   ("XIMAGE" pro nil (lib "ximage.pro" nil "coyote") "%s, image" (nil ("Colortable") ("Group_Leader") ("Keep_Aspect") ("Title") ("TrueColor") ("XRange") ("XSize") ("XTitle") ("YRange") ("YSize") ("YTitle")))
   ("XPlot_Aspect" fun nil (lib "xplot.pro" nil "coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("XPlot_Output" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_Exit" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_Printing" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("Xplot_Cleanup" pro nil (lib "xplot.pro" nil "coyote") "%s, id" (nil))
   ("XPlot_Draw_Widget_Events" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_Resize_Events" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_ColorSchemes" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_Linestyle" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_Symbol" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot_SymbolSize" pro nil (lib "xplot.pro" nil "coyote") "%s, event" (nil))
   ("XPlot" pro nil (lib "xplot.pro" nil "coyote") "%s, xx, yy" (nil ("_Extra") ("ColorPrint") ("Exact") ("Group_Leader") ("Landscape") ("Position") ("PSym") ("SymSize") ("Title") ("Vector") ("XTitle") ("YTitle")))
   ("XSTRETCH_VALIDATE_THRESHOLD" fun nil (lib "xstretch.pro" nil "coyote") "Result = %s(threshold, info)" (nil))
   ("XSTRETCH_SCALEIMAGE" fun nil (lib "xstretch.pro" nil "coyote") "Result = %s(info)" (nil))
   ("XSTRETCH_IMAGEWINDOWKILLED" pro nil (lib "xstretch.pro" nil "coyote") "%s, imageWindowID" (nil))
   ("XSTRETCH_SAVETOMAIN" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_DRAWLINES" pro nil (lib "xstretch.pro" nil "coyote") "%s, minThresh, maxThresh, info" (nil))
   ("XSTRETCH_NOTIFYOTHERS" pro nil (lib "xstretch.pro" nil "coyote") "%s, info" (nil))
   ("XSTRETCH_HISTOPLOT" pro nil (lib "xstretch.pro" nil "coyote") "%s, info" (nil ("_Extra") ("MAXVALUE") ("WID")))
   ("XSTRETCH_PARAMETERS" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_FLIPIMAGE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_GAMMA" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_NEGATIVE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_OPENIMAGE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_SAVEAS" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_SAVEHISTOAS" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_SETTHRESHOLD" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_PRINT" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_PROCESS_EVENTS" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_MOVELINE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_RESTORE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_STRETCHTYPE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_QUIT" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_COLORS" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_MAXVALUE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_IMAGE_RESIZE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_HISTOGRAM_RESIZE" pro nil (lib "xstretch.pro" nil "coyote") "%s, event" (nil))
   ("XSTRETCH_CLEANUP" pro nil (lib "xstretch.pro" nil "coyote") "%s, tlb" (nil))
   ("XSTRETCH" pro nil (lib "xstretch.pro" nil "coyote") "%s, theImage" (nil ("_EXTRA") ("Beta") ("Block") ("Brewer") ("Colors") ("Colortable") ("Exponent") ("Filename") ("Gamma") ("Group_Leader") ("Max_Value") ("MaxThresh") ("Mean") ("MinThresh") ("Negative") ("No_Window") ("Notify_Obj") ("Notify_Pro") ("Sigma") ("Title") ("Type") ("UValue") ("XPos") ("YPos")))
   ("CW_Light_Control_Intensity_Events" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("CW_Light_Control_Events" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("CW_Light_Control" fun nil (lib "xsurface.pro" nil "coyote") "Result = %s(parent, theLight)" (nil ("Color") ("Event_Pro") ("Index") ("LabelSize") ("Name") ("UValue")))
   ("XSurface_Elevation_Colors" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Elevation_Shading" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Aspect" fun nil (lib "xsurface.pro" nil "coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("XSurface_Cleanup" pro nil (lib "xsurface.pro" nil "coyote") "%s, tlb" (nil))
   ("XSurface_Draw_Events" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Style" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Properties" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Output" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Exit" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Light_Done" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Light_Controls_Event" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Light_Controls" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Printing" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface_Resize" pro nil (lib "xsurface.pro" nil "coyote") "%s, event" (nil))
   ("XSurface" pro nil (lib "xsurface.pro" nil "coyote") "%s, data, x, y" (nil ("_Extra") ("Colortable") ("Elevation_Shading") ("Exact") ("Group_Leader") ("Hidden_Lines") ("Landscape") ("Shaded") ("Title") ("XTitle") ("YTitle") ("ZTitle")))
   ("ZOOMBOX_BOX_COLOR" pro nil (lib "zoombox.pro" nil "coyote") "%s, event" (nil))
   ("ZOOMBOX_COLORS" pro nil (lib "zoombox.pro" nil "coyote") "%s, event" (nil))
   ("ZOOMBOX_QUITTER" pro nil (lib "zoombox.pro" nil "coyote") "%s, event" (nil))
   ("ZOOMBOX_CLEANUP" pro nil (lib "zoombox.pro" nil "coyote") "%s, tlb" (nil))
   ("ZOOMBOX_ZOOM_CLEANUP" pro nil (lib "zoombox.pro" nil "coyote") "%s, tlb" (nil))
   ("ZOOMBOX_FACTOR" pro nil (lib "zoombox.pro" nil "coyote") "%s, event" (nil))
   ("ZOOMBOX_DRAW_EVENTS" pro nil (lib "zoombox.pro" nil "coyote") "%s, event" (nil))
   ("ZOOMBOX" pro nil (lib "zoombox.pro" nil "coyote") "%s, image" (nil ("Group_Leader") ("Hardware_Render") ("Instance") ("Interpolation")))))
